[{"D:\\Portfolio\\MaxMMA\\frontend\\src\\index.js":"1","D:\\Portfolio\\MaxMMA\\frontend\\src\\App.js":"2","D:\\Portfolio\\MaxMMA\\frontend\\src\\components\\Header.js":"3","D:\\Portfolio\\MaxMMA\\frontend\\src\\components\\Footer.js":"4","D:\\Portfolio\\MaxMMA\\frontend\\src\\screens\\HomeScreen.js":"5","D:\\Portfolio\\MaxMMA\\frontend\\src\\components\\Product.js":"6","D:\\Portfolio\\MaxMMA\\frontend\\src\\components\\Rating.js":"7","D:\\Portfolio\\MaxMMA\\frontend\\src\\screens\\ProductScreen.js":"8","D:\\Portfolio\\MaxMMA\\frontend\\src\\store.js":"9","D:\\Portfolio\\MaxMMA\\frontend\\src\\reducers\\productReducers.js":"10","D:\\Portfolio\\MaxMMA\\frontend\\src\\constants\\productConstants.js":"11","D:\\Portfolio\\MaxMMA\\frontend\\src\\actions\\productActions.js":"12","D:\\Portfolio\\MaxMMA\\frontend\\src\\components\\Loader.js":"13","D:\\Portfolio\\MaxMMA\\frontend\\src\\components\\Message.js":"14","D:\\Portfolio\\MaxMMA\\frontend\\src\\screens\\CartScreen.js":"15","D:\\Portfolio\\MaxMMA\\frontend\\src\\reducers\\cartReducers.js":"16","D:\\Portfolio\\MaxMMA\\frontend\\src\\constants\\cartConstants.js":"17","D:\\Portfolio\\MaxMMA\\frontend\\src\\actions\\cartActions.js":"18","D:\\Portfolio\\MaxMMA\\frontend\\src\\reducers\\userReducers.js":"19","D:\\Portfolio\\MaxMMA\\frontend\\src\\constants\\userConstants.js":"20","D:\\Portfolio\\MaxMMA\\frontend\\src\\screens\\LoginScreen.js":"21","D:\\Portfolio\\MaxMMA\\frontend\\src\\actions\\userActions.js":"22","D:\\Portfolio\\MaxMMA\\frontend\\src\\components\\FormContainer.js":"23","D:\\Portfolio\\MaxMMA\\frontend\\src\\screens\\RegisterScreen.js":"24","D:\\Portfolio\\MaxMMA\\frontend\\src\\screens\\ProfileScreen.js":"25","D:\\Portfolio\\MaxMMA\\frontend\\src\\screens\\ShippingScreen.js":"26","D:\\Portfolio\\MaxMMA\\frontend\\src\\components\\CheckoutSteps.js":"27","D:\\Portfolio\\MaxMMA\\frontend\\src\\screens\\PaymentScreen.js":"28","D:\\Portfolio\\MaxMMA\\frontend\\src\\screens\\PlaceOrderScreen.js":"29","D:\\Portfolio\\MaxMMA\\frontend\\src\\reducers\\orderReducers.js":"30","D:\\Portfolio\\MaxMMA\\frontend\\src\\constants\\orderConstants.js":"31","D:\\Portfolio\\MaxMMA\\frontend\\src\\actions\\orderActions.js":"32","D:\\Portfolio\\MaxMMA\\frontend\\src\\screens\\OrderScreen.js":"33","D:\\Portfolio\\MaxMMA\\frontend\\src\\screens\\UserListScreen.js":"34","D:\\Portfolio\\MaxMMA\\frontend\\src\\screens\\UserEditScreen.js":"35","D:\\Portfolio\\MaxMMA\\frontend\\src\\screens\\ProductListScreen.js":"36","D:\\Portfolio\\MaxMMA\\frontend\\src\\screens\\ProductDetailScreen.js":"37","D:\\Portfolio\\MaxMMA\\frontend\\src\\screens\\OrderListScreen.js":"38"},{"size":316,"mtime":1611463824278,"results":"39","hashOfConfig":"40"},{"size":2321,"mtime":1614612086609,"results":"41","hashOfConfig":"40"},{"size":2523,"mtime":1614359163063,"results":"42","hashOfConfig":"40"},{"size":337,"mtime":1611156433891,"results":"43","hashOfConfig":"40"},{"size":1127,"mtime":1612457512514,"results":"44","hashOfConfig":"40"},{"size":911,"mtime":1611472878250,"results":"45","hashOfConfig":"40"},{"size":1783,"mtime":1611326560322,"results":"46","hashOfConfig":"40"},{"size":3723,"mtime":1614619696597,"results":"47","hashOfConfig":"40"},{"size":2244,"mtime":1614790630012,"results":"48","hashOfConfig":"40"},{"size":3225,"mtime":1614595257692,"results":"49","hashOfConfig":"40"},{"size":1114,"mtime":1614595115625,"results":"50","hashOfConfig":"40"},{"size":3803,"mtime":1614592597415,"results":"51","hashOfConfig":"40"},{"size":453,"mtime":1611467319324,"results":"52","hashOfConfig":"40"},{"size":333,"mtime":1611468283336,"results":"53","hashOfConfig":"40"},{"size":3632,"mtime":1612077798136,"results":"54","hashOfConfig":"40"},{"size":1385,"mtime":1612627028231,"results":"55","hashOfConfig":"40"},{"size":273,"mtime":1612626175428,"results":"56","hashOfConfig":"40"},{"size":1286,"mtime":1612035698457,"results":"57","hashOfConfig":"40"},{"size":4208,"mtime":1614442093379,"results":"58","hashOfConfig":"40"},{"size":1446,"mtime":1614441406740,"results":"59","hashOfConfig":"40"},{"size":2240,"mtime":1611845114397,"results":"60","hashOfConfig":"40"},{"size":6350,"mtime":1614443787928,"results":"61","hashOfConfig":"40"},{"size":364,"mtime":1614526979411,"results":"62","hashOfConfig":"40"},{"size":3031,"mtime":1611852736706,"results":"63","hashOfConfig":"40"},{"size":6406,"mtime":1614438249213,"results":"64","hashOfConfig":"40"},{"size":2641,"mtime":1612078946158,"results":"65","hashOfConfig":"40"},{"size":1462,"mtime":1612029668976,"results":"66","hashOfConfig":"40"},{"size":1398,"mtime":1612030621276,"results":"67","hashOfConfig":"40"},{"size":4577,"mtime":1614269545797,"results":"68","hashOfConfig":"40"},{"size":3648,"mtime":1614790281833,"results":"69","hashOfConfig":"40"},{"size":1260,"mtime":1614790037932,"results":"70","hashOfConfig":"40"},{"size":5080,"mtime":1614793324617,"results":"71","hashOfConfig":"40"},{"size":6625,"mtime":1614839212885,"results":"72","hashOfConfig":"40"},{"size":2972,"mtime":1614526052076,"results":"73","hashOfConfig":"40"},{"size":3192,"mtime":1614526877173,"results":"74","hashOfConfig":"40"},{"size":4248,"mtime":1614593742400,"results":"75","hashOfConfig":"40"},{"size":6206,"mtime":1614610790926,"results":"76","hashOfConfig":"40"},{"size":2999,"mtime":1614793809519,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"v2bjgv",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"80"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"80"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"80"},"D:\\Portfolio\\MaxMMA\\frontend\\src\\index.js",[],["159","160"],"D:\\Portfolio\\MaxMMA\\frontend\\src\\App.js",[],"D:\\Portfolio\\MaxMMA\\frontend\\src\\components\\Header.js",[],"D:\\Portfolio\\MaxMMA\\frontend\\src\\components\\Footer.js",[],"D:\\Portfolio\\MaxMMA\\frontend\\src\\screens\\HomeScreen.js",[],"D:\\Portfolio\\MaxMMA\\frontend\\src\\components\\Product.js",[],"D:\\Portfolio\\MaxMMA\\frontend\\src\\components\\Rating.js",[],"D:\\Portfolio\\MaxMMA\\frontend\\src\\screens\\ProductScreen.js",[],"D:\\Portfolio\\MaxMMA\\frontend\\src\\store.js",[],"D:\\Portfolio\\MaxMMA\\frontend\\src\\reducers\\productReducers.js",[],"D:\\Portfolio\\MaxMMA\\frontend\\src\\constants\\productConstants.js",[],"D:\\Portfolio\\MaxMMA\\frontend\\src\\actions\\productActions.js",[],"D:\\Portfolio\\MaxMMA\\frontend\\src\\components\\Loader.js",[],"D:\\Portfolio\\MaxMMA\\frontend\\src\\components\\Message.js",[],"D:\\Portfolio\\MaxMMA\\frontend\\src\\screens\\CartScreen.js",[],"D:\\Portfolio\\MaxMMA\\frontend\\src\\reducers\\cartReducers.js",[],"D:\\Portfolio\\MaxMMA\\frontend\\src\\constants\\cartConstants.js",[],["161","162"],"D:\\Portfolio\\MaxMMA\\frontend\\src\\actions\\cartActions.js",[],"D:\\Portfolio\\MaxMMA\\frontend\\src\\reducers\\userReducers.js",[],"D:\\Portfolio\\MaxMMA\\frontend\\src\\constants\\userConstants.js",[],"D:\\Portfolio\\MaxMMA\\frontend\\src\\screens\\LoginScreen.js",[],"D:\\Portfolio\\MaxMMA\\frontend\\src\\actions\\userActions.js",[],"D:\\Portfolio\\MaxMMA\\frontend\\src\\components\\FormContainer.js",[],"D:\\Portfolio\\MaxMMA\\frontend\\src\\screens\\RegisterScreen.js",[],"D:\\Portfolio\\MaxMMA\\frontend\\src\\screens\\ProfileScreen.js",[],"D:\\Portfolio\\MaxMMA\\frontend\\src\\screens\\ShippingScreen.js",[],"D:\\Portfolio\\MaxMMA\\frontend\\src\\components\\CheckoutSteps.js",[],"D:\\Portfolio\\MaxMMA\\frontend\\src\\screens\\PaymentScreen.js",[],"D:\\Portfolio\\MaxMMA\\frontend\\src\\screens\\PlaceOrderScreen.js",[],"D:\\Portfolio\\MaxMMA\\frontend\\src\\reducers\\orderReducers.js",["163"],"import {\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_RESET,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_RESET,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_MY_RESET,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_FAIL,\r\n} from \"../constants/orderConstants\"\r\n\r\n// Create order reducer\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_CREATE_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      }\r\n    case ORDER_CREATE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n        orderItems: action.payload,\r\n      }\r\n    case ORDER_CREATE_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n// Get order detail reducer\r\nexport const orderDetailsReducer = (\r\n  state = { loading: true, orderItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ORDER_DETAILS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      }\r\n    case ORDER_DETAILS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        order: action.payload,\r\n      }\r\n    case ORDER_DETAILS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n// Update order to paid reducer\r\nexport const orderPayReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_PAY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_PAY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      }\r\n    case ORDER_PAY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    case ORDER_PAY_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n// Update order to deliver reducer\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_DELIVER_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_DELIVER_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      }\r\n    case ORDER_DELIVER_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    case ORDER_DELIVER_RESET:\r\n      return {}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n// Get user its own order list\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_MY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_LIST_MY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      }\r\n    case ORDER_LIST_MY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    case ORDER_LIST_MY_RESET:\r\n      return {\r\n        orders: [],\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n// Get all orders, admin only\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_REQUEST:\r\n      return {\r\n        loading: true,\r\n      }\r\n    case ORDER_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      }\r\n    case ORDER_LIST_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","D:\\Portfolio\\MaxMMA\\frontend\\src\\constants\\orderConstants.js",[],"D:\\Portfolio\\MaxMMA\\frontend\\src\\actions\\orderActions.js",[],"D:\\Portfolio\\MaxMMA\\frontend\\src\\screens\\OrderScreen.js",[],"D:\\Portfolio\\MaxMMA\\frontend\\src\\screens\\UserListScreen.js",[],"D:\\Portfolio\\MaxMMA\\frontend\\src\\screens\\UserEditScreen.js",[],"D:\\Portfolio\\MaxMMA\\frontend\\src\\screens\\ProductListScreen.js",[],"D:\\Portfolio\\MaxMMA\\frontend\\src\\screens\\ProductDetailScreen.js",["164"],"// Admin only, product detail edit screen.\r\n\r\nimport React, { useState, useEffect } from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { Row, Col, Form, Button } from \"react-bootstrap\"\r\nimport Loader from \"../components/Loader\"\r\nimport Message from \"../components/Message\"\r\nimport FormContainer from \"../components/FormContainer\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { productListDetails, updateProduct } from \"../actions/productActions\"\r\nimport {\r\n  PRODUCT_UPDATE_RESET,\r\n  PRODUCT_DETAILS_RESET,\r\n} from \"../constants/productConstants\"\r\nimport axios from \"axios\"\r\n\r\nconst ProductDetailScreen = ({ match, history }) => {\r\n  const [name, setName] = useState(\"\")\r\n  const [price, setPrice] = useState(\"\")\r\n  const [countInStock, setCountInStock] = useState(\"\")\r\n  const [category, setCategory] = useState(\"\")\r\n  const [image, setImage] = useState(\"\")\r\n  const [brand, setBrand] = useState(\"\")\r\n  const [description, setDescription] = useState(\"\")\r\n  const [uploading, setUploading] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n  const productId = match.params.id\r\n  const { userInfo } = useSelector((state) => state.userLogin)\r\n  const productDetails = useSelector((state) => state.productDetails)\r\n  const productUpdate = useSelector((state) => state.productUpdate)\r\n  const { loading, error, product } = productDetails\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = productUpdate\r\n\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      if (successUpdate) {\r\n        history.push(\"/admin/productlist\")\r\n        dispatch({\r\n          type: PRODUCT_UPDATE_RESET,\r\n        })\r\n        dispatch({\r\n          type: PRODUCT_DETAILS_RESET,\r\n        })\r\n      } else {\r\n        if (!product || !product.name || productId !== product._id) {\r\n          dispatch(productListDetails(productId))\r\n        } else {\r\n          setName(product.name)\r\n          setPrice(product.price)\r\n          setCategory(product.category)\r\n          setBrand(product.brand)\r\n          setImage(product.image)\r\n          setCountInStock(product.countInStock)\r\n          setDescription(product.description)\r\n        }\r\n      }\r\n    } else {\r\n      history.push(\"/login\")\r\n    }\r\n  }, [dispatch, product, productId, history, successUpdate, userInfo])\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault()\r\n    dispatch(\r\n      updateProduct({\r\n        _id: product._id,\r\n        name,\r\n        price,\r\n        countInStock,\r\n        image,\r\n        category,\r\n        brand,\r\n        description,\r\n      })\r\n    )\r\n  }\r\n\r\n  const uploadHandler = async (e) => {\r\n    const file = e.target.files[0]\r\n    const formData = new FormData()\r\n    formData.append(\"image\", file)\r\n\r\n    setUploading(true)\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        },\r\n      }\r\n\r\n      const { data } = await axios.post(\"/api/upload\", formData, config)\r\n      console.log(data)\r\n      setImage(data)\r\n      setUploading(false)\r\n    } catch (error) {\r\n      setUploading(false)\r\n      console.log(error)\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col>\r\n          <h1>商品</h1>\r\n        </Col>\r\n      </Row>\r\n      <Link to=\"/admin/productlist\" className=\"btn btn-light btn-sm\">\r\n        回上一頁?\r\n      </Link>\r\n      <FormContainer>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant=\"danger\">{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant=\"danger\">{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group>\r\n              <Form.Label>名稱</Form.Label>\r\n              <Form.Control\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}\r\n                placeholder=\"請輸入商品名稱\"\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>價格</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}\r\n                placeholder=\"請輸入商品價格\"\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>庫存</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                value={countInStock}\r\n                onChange={(e) => setCountInStock(e.target.value)}\r\n                placeholder=\"請輸入商品庫存\"\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>圖片</Form.Label>\r\n              <Form.Control\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}\r\n                placeholder=\"請輸入商品連結\"\r\n              ></Form.Control>\r\n              <Form.File onChange={uploadHandler}></Form.File>\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>分類</Form.Label>\r\n              <Form.Control\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}\r\n                placeholder=\"請輸入商品分類\"\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>品牌</Form.Label>\r\n              <Form.Control\r\n                value={brand}\r\n                onChange={(e) => setBrand(e.target.value)}\r\n                placeholder=\"請輸入商品品牌\"\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group>\r\n              <Form.Label>敘述</Form.Label>\r\n              <Form.Control\r\n                as=\"textarea\"\r\n                rows={5}\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}\r\n                placeholder=\"請輸入商品敘述\"\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <Button type=\"submit\">送出</Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  )\r\n}\r\nexport default ProductDetailScreen\r\n","D:\\Portfolio\\MaxMMA\\frontend\\src\\screens\\OrderListScreen.js",["165"],"import React, { useEffect } from \"react\"\r\nimport { Row, Col, Button, Table } from \"react-bootstrap\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { LinkContainer } from \"react-router-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { getOrderList } from \"../actions/orderActions\"\r\nimport Loader from \"../components/Loader\"\r\nimport Message from \"../components/Message\"\r\n\r\nconst OrderListScreen = () => {\r\n  const dispatch = useDispatch()\r\n  const orderList = useSelector((state) => state.getOrderList)\r\n  const { loading, error, orders } = orderList\r\n  console.log(orders)\r\n\r\n  useEffect(() => {\r\n    dispatch(getOrderList())\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col>\r\n          <h1>訂單</h1>\r\n        </Col>\r\n      </Row>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\">{error}</Message>\r\n      ) : (\r\n        <Row>\r\n          <Col>\r\n            <Table striped hover responsive bordered className=\"text-center\">\r\n              <thead>\r\n                <tr>\r\n                  <th>編號</th>\r\n                  <th>會員</th>\r\n                  <th>地區</th>\r\n                  <th>日期</th>\r\n                  <th>總金額</th>\r\n                  <th>付款</th>\r\n                  <th>出貨</th>\r\n                  <th>細項</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {orders.map((order) => (\r\n                  <tr key={order._id}>\r\n                    <td>{order._id}</td>\r\n                    <td>{order.user.name}</td>\r\n                    <td>{order.createdAt.substring(0, 10)}</td>\r\n                    <td>{order.shippingAddress.city}</td>\r\n                    <td>{order.totalPrice}</td>\r\n                    <td>\r\n                      {order.isPaid ? (\r\n                        order.paidAt.substring(0, 10)\r\n                      ) : (\r\n                        <i\r\n                          className=\"fas fa-times\"\r\n                          style={{ color: \"red\" }}\r\n                        ></i>\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      {order.isDelivered ? (\r\n                        order.deliveredAt.substring(0, 10)\r\n                      ) : (\r\n                        <i\r\n                          className=\"fas fa-times\"\r\n                          style={{ color: \"red\" }}\r\n                        ></i>\r\n                      )}\r\n                    </td>\r\n                    <td>\r\n                      <LinkContainer to={`/orders/${order._id}`}>\r\n                        <Button variant=\"secondery\" clasName=\"btn-sm\">\r\n                          訂單細節\r\n                        </Button>\r\n                      </LinkContainer>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </Table>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderListScreen\r\n",{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","replacedBy":"169"},{"ruleId":"166","replacedBy":"170"},{"ruleId":"168","replacedBy":"171"},{"ruleId":"172","severity":1,"message":"173","line":100,"column":7,"nodeType":"174","messageId":"175","endLine":100,"endColumn":26},{"ruleId":"172","severity":1,"message":"176","line":25,"column":10,"nodeType":"174","messageId":"175","endLine":25,"endColumn":19},{"ruleId":"172","severity":1,"message":"177","line":3,"column":10,"nodeType":"174","messageId":"175","endLine":3,"endColumn":14},"no-native-reassign",["178"],"no-negated-in-lhs",["179"],["178"],["179"],"no-unused-vars","'orderDeliverReducer' is assigned a value but never used.","Identifier","unusedVar","'uploading' is assigned a value but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation"]